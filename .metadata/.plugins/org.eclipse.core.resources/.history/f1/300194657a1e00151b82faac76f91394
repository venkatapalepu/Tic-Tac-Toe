var ticTacController = function($scope) {

  $scope.board = [
    [ { value: '-' }, { value: '-' }, { value: '-' } ],
    [ { value: '-' }, { value: '-' }, { value: '-' } ],
    [ { value: '-' }, { value: '-' }, { value: '-' } ]
  ];

  
  $scope.reset = function() {
    // TODO: set each cell.value = '-'
	  
	  $scope.board = [
	                  [ { value: '-' }, { value: '-' }, { value: '-' } ],
	                  [ { value: '-' }, { value: '-' }, { value: '-' } ],
	                  [ { value: '-' }, { value: '-' }, { value: '-' } ]
	                ];
	  
	  /*cell1.value = '-';
	  cell2.value = '-';
	  cell3.value = '-';*/
    
    $scope.currentPlayer = 'X';
    $scope.winner = false;
    $scope.cat = false;
  };
  
  //$scope.reset();
  
  $scope.isTaken = function(cell) {
    return cell.value !== '-';
  };
  
  var checkForMatch = function(cell1, cell2, cell3) {
    return cell1.value === cell2.value && 
           cell1.value === cell3.value &&
           cell1.value !== '-';
  };
  
  function cell(row, column) {
      return $scope.board[row][column];
  }
  
  // sets the value of cell
  function setCell(row, column, value) {
      $scope.board[row][column] = value;
  }
  
  $scope.cellClass = function (row, column) {
      var value = cell(row, column);
      return 'cell cell-' + value;
  }
  $scope.cellText = function (row, column) {
      var value = cell(row, column);
      return value ? value : '-';
  }
  $scope.cellClick = function (row, column) {
      if ($scope.winner) {
          alert('Already game over.');
          return;
      }
      if ($scope.player != $scope.currentPlayer) {
          alert('Not your turn.');
          return;
      }
      setCell(row, column, $scope.player);
      checkBoard();
      $scope.currentPlayer = nextPlayer($scope.currentPlayer);
  }
  
  // returns the next player
  function nextPlayer(player) {
      return {
          O: 'X',
          X: 'O'
      }[player]
  }
  
  $scope.newGame = function () {
      for (var i = 0; i < 3; i++) {
          for (var j = 0; j < 3; j++) {
              setCell(i, j, '-');
          }
      }
      $scope.currentPlayer = 'X';
      $scope.player = 'X';
      $scope.winner = null;
  }
  
  var checkForEndOfGame = function() {
    // TODO: check for a rowMatch, columnMatch, or diagonalMatch
	  
	    // checks the board and declare winner
	    //function checkBoard() {
	        var winner, empty = false;

	        // check for any empty cell
	        for (var i = 0; i < 3; i++) {
	            for (var j = 0; j < 3; j++) {
	                if (!cell(i, j)) empty = true;
	            }
	        }

	        // no more empty cell - no winner
	        if (!empty) {
	            $scope.winner = 'NONE';
	            return ;
	        }

	        // check board vertically and horizontally
	        for (var i = 0; i < 3; i++) {
	            if (cell(i, 0) && cell(i, 0) == cell(i, 1) && cell(i, 1) == cell(i, 2)) {
	                winner = cell(i, 0);
	            }
	            if (cell(0, i) && cell(0, i) == cell(1, i) && cell(1, i) == cell(2, i)) {
	                winner = cell(0, i);
	            }
	        }

	        // check board diagonally
	        if (cell(0, 0) && cell(0, 0) == cell(1, 1) && cell(1, 1) == cell(2, 2)) {
	            winner = cell(0, 0);
	        }
	        if (cell(0, 2) && cell(0, 2) == cell(1, 1) && cell(1, 1) == cell(2, 0)) {
	            winner = cell(0, 2);
	        }

	        // winner? declare!
	        if (winner) {
	            $scope.winner = winner;
	        }
	   // }
    
    // $scope.winner = rowMatch || columnMatch || diagonalMatch;
    
    // TODO: if we don't have a winner, check for cat
    
	        //return $scope.winner;
    return $scope.winner || $scope.cat;
  };
  
  $scope.move = function(cell) {
    cell.value = $scope.currentPlayer;
    if (checkForEndOfGame() === false) {
      $scope.currentPlayer = $scope.currentPlayer === 'X' ? 'O' : 'X';
    }
  };
  
};
 